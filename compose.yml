# version: "3.8"

# services:
#   frontend:
#     build: ./frontend
#     ports:
#       - "5173:5173"
#     env_file:
#       - root.env
#     environment:
#       - VITE_API_URL=http://localhost:8000
#     networks:
#       - golding-network
#     volumes:
#       - ./frontend:/app
#     working_dir: /app
#     command: pnpm dev --host
#     depends_on:
#       - backend

#   backend:
#     build: ./backend
#     ports:
#       - "8000:8000"
#     env_file:
#       - root.env
#     networks:
#       - golding-network
#     volumes:
#       - ./backend:/app
#     working_dir: /app
#     depends_on:
#       db:
#         condition: service_healthy

#   db:
#     image: postgres:latest
#     ports:
#       - "5432:5432"
#     env_file:
#       - root.env
#     networks:
#       - golding-network
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres"]
#       interval: 5s
#       timeout: 5s
#       retries: 5

# networks:
#   golding-network:
#     driver: bridge

# volumes:
#   postgres_data:

services:
  frontend:
    build:
      context: ./frontend
      target: builder
    ports:
      - "5173:5173"
    env_file:
      - .env
    environment:
      - VITE_API_URL=http://localhost:8000
    networks:
      - golding-network
    volumes:
      - frontend_data:/app
    command: pnpm dev --host
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - golding-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    env_file:
      - .env
    networks:
      - golding-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  golding-network:
    driver: bridge

volumes:
  postgres_data:
  frontend_data:
